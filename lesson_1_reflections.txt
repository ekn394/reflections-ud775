Q: How did viewing a diff between two versions of a file help you see the bug that
was introduced?

   A: Absolutely.  It narrowed down the things to look at to just a few lines instead of a thousand. This problem could have been much 
worse. The bug could have been in a much larger file, and What if the change was made to one of a number of files?  This bug was found 
because one of the FEW words we are expecting to see shows up IN A LINE IT SAYS TO CHECK with what looks like a typo.  What if the bug was 
not so As the complexity of the projects goes up. easy to spot?  Part of a long math equation for example.  You will deffinitely want to 
know the difference between the file that worked last, and the new broken file, to narrow down the problem.  


Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

   A: If there are many iterations of the program, having access to all versions means that you can always use the most narrow search between files.
Comparing yesterday to today is probably easier than last year to today as far as the number of changes to search through.  

    
Q: What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   A: Pro - It only takes a snapshot when you want.  It doesn't save your work mid-way through a thought. 
	Con - It puts the responsibility on the user to remember to commit changes. 

Q: Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   A: Git can be used on more complicated projects that have many interlocking files.  It is possible that you changed from having one CSS 
	page to having several depending on Desktop vs Mobile. This means you have several CSS files to update.  AND the HTML file may need 
	to be pointed to a new CSS file.  So you will need to commit changes in several files at once for this one particular update.  


Q: How can you use the commands git log and git diff to view the history of files?

    A: I'm not sure. I imagine that you can, but we haven't covered that yet.  


How might using version control make you more confident to make changes that
could break something?

    A: It makes it much easier to revert back not just to the most recent version but to whole list of previous version.  It is zero problem 
	to make a change that breaks things (in any file).  This encourages more adventurous changes.  

Now that you have your workspace set up, what do you want to try using Git for?

    Seems like any textbased project that might need ongoing updates over time.  
